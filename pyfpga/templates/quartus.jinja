{#
#
# Copyright (C) 2015-2024 PyFPGA Project
#
# SPDX-License-Identifier: GPL-3.0-or-later
#
#}

{% if CFG %}# Project configuration -------------------------------------------------------

package require ::quartus::project
project_new {{ PROJECT }} -overwrite
set_global_assignment -name DEVICE {{ PART }}

{{ PRECFG }}

{% if FILES %}# Files inclusion
{% for name, attr in FILES.items() %}
{% if attr.hdl == "vhdl" %}
set_global_assignment -name VHDL_FILE {{ name }} {% if 'lib' in attr %} -library {{ attr.lib }}{% endif %}
{% elif attr.hdl == "vlog" %}
set_global_assignment -name VERILOG_FILE {{ name }}
{% elif attr.hdl == "slog" %}
set_global_assignment -name SYSTEMVERILOG_FILE {{ name }}
{% endif %}
{% endfor %}
{% endif %}

{% if CONSTRAINTS %}# Constraints inclusion
{% for name, attr in CONSTRAINTS.items() %}
{% if name.endswith('.sdc') %}
set_global_assignment -name SDC_FILE {{ name }}
{% else %}
source {{ name }}
{% endif %}
{% endfor %}
{% endif %}

{% if TOP %}# Top-level specification
set_global_assignment -name TOP_LEVEL_ENTITY {{ TOP }}
{% endif %}

{% if INCLUDES %}# Verilog Includes
{% for INCLUDE in INCLUDES %}
set_global_assignment -name SEARCH_PATH {{ INCLUDE }}
{% endfor %}
{% endif %}

{% if DEFINES %}# Verilog Defines
{% for key, value in DEFINES.items() %}
set_global_assignment -name VERILOG_MACRO {{ key }}={{ value }}
{% endfor %}
{% endif %}

{% if PARAMS %}# Verilog Parameters / VHDL Generics
{% for key, value in PARAMS.items() %}
set_parameter -name {{ key }} {{ value }}
{% endfor %}
{% endif %}

{{ POSTCFG }}

project_close

{% endif %}

{% if SYN or PAR or BIT %}# Design flow -----------------------------------------------------------------

package require ::quartus::flow
project_open -force {{ PROJECT }}.qpf
# set_global_assignment -name NUM_PARALLEL_PROCESSORS ALL

{% if SYN %}# Synthesis

{{ PRESYN }}

execute_module -tool map

{{ POSTSYN }}

{% endif %}

{% if PAR %}# Place and Route

{{ PREPAR }}

execute_module -tool fit
execute_module -tool sta

{{ POSTPAR }}

{% endif %}

{% if BIT %}# Bitstream generation

{{ PREBIT }}

execute_module -tool asm

{{ POSTBIT }}

{% endif %}

project_close

{% endif %}
