#
# PyFPGA
# Copyright (C) 2015-2024 Rodrigo A. Melo
#
# SPDX-License-Identifier: GPL-3.0-or-later
#

set PRESYNTH {{ PRESYNTH }}
set PROJECT  {{ PROJECT }}
set PART     {{ PART }}
set FAMILY   {{ FAMILY }}
set DEVICE   {{ DEVICE }}
set PACKAGE  {{ PACKAGE }}
set SPEED    {{ SPEED }}
set TOP      {{ TOP }}

set PARAMS   [list {{ PARAMS }}]

proc fpga_files {} {
{{ FILES }}
}

proc fpga_file {FILE {LIBRARY "work"}} {
    set message "adding the file '$FILE'"
    if { $LIBRARY != "work" } { append message " (into the VHDL library '$LIBRARY')" }
    regexp -nocase {\.(\w*)$} $FILE -> ext
    if { $ext == "tcl" } {
        source $FILE
        return
    }
    if {$ext == "v"} {
        set TYPE VERILOG_FILE
    } elseif {$ext == "sv"} {
        set TYPE SYSTEMVERILOG_FILE
    } elseif {$ext == "vhdl" || $ext == "vhd"} {
        set TYPE VHDL_FILE
    } elseif {$ext == "sdc"} {
        set TYPE SDC_FILE
    } else {
        set TYPE SOURCE_FILE
    }
    if { $LIBRARY != "work" } {
        set_global_assignment -name $TYPE $FILE -library $LIBRARY
    } else {
        set_global_assignment -name $TYPE $FILE
    }
}

proc fpga_include {PATH} {
    lappend INCLUDED $PATH
    # Verilog Included Files are NOT added
    foreach INCLUDE $INCLUDED {
        set_global_assignment -name SEARCH_PATH $INCLUDE
    }
}

proc fpga_params {} {
    if { [llength $PARAMS] == 0 } { return }
    foreach PARAM $PARAMS {
        eval "set_parameter -name $PARAM"
    }
}

#--[ Project configuration ]---------------------------------------------------

{% if CFG %}
package require ::quartus::project
project_new $PROJECT -overwrite

set_global_assignment -name DEVICE $PART

{{ PRECFG }}

fpga_files

set_global_assignment -name TOP_LEVEL_ENTITY $TOP

fpga_params

{{ POSTCFG }}

project_close
{% endif %}

#--[ Design flow ]-------------------------------------------------------------

{% if SYN or PAR or BIT %}
package require ::quartus::flow
project_open -force $PROJECT.qpf
set_global_assignment -name NUM_PARALLEL_PROCESSORS ALL

{% if SYN %}
{{ PRESYN }}

execute_module -tool map

{{ POSTSYN }}
{% endif %}

{% if PAR %}
{{ PREPAR }}

execute_module -tool fit
execute_module -tool sta

{{ POSTPAR }}
{% endif %}

{% if BIT %}
{{ PREBIT }}

execute_module -tool asm

{{ POSTBIT }}
{% endif %}

project_close
{% endif %}
