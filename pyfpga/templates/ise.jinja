#
# Copyright (C) 2015-2024 Rodrigo A. Melo
#
# SPDX-License-Identifier: GPL-3.0-or-later
#

#    if {$ext == "xcf"} {
#        project set "Synthesis Constraints File" $FILE -process "Synthesize - XST"
#    } elseif { $LIBRARY != "work" } {
#        lib_vhdl new $LIBRARY
#        xfile add $FILE -lib_vhdl $LIBRARY
#    } else {
#        xfile add $FILE
#    }
#}

#--[ Project configuration ]--------------------------------------------------

{% if CFG %}
if { [ file exists {{ PROJECT }}.xise ] } { file delete {{ PROJECT }}.xise }
project new {{ PROJECT }}.xise
project set family  {{ FAMILY }}
project set device  {{ DEVICE }}
project set package {{ PACKAGE }}
project set speed  -{{ SPEED }}

{{ PRECFG }}

{{ FILES }}
{% if CONSTRAINTS %}
project set "Synthesis Constraints File" "{{ CONSTRAINTS }}" -process "Synthesize - XST"
{% endif %}

{% if TOP %}
project set top {{ TOP }}
{% endif %}

{% if DEFINES %}
project set "Verilog Macros" "{{ DEFINES }}" -process "Synthesize - XST"
{% endif %}

{% if INCLUDES %}
project set "Verilog Include Directories" "{{ INCLUDES }}" -process "Synthesize - XST"
# [join $INCLUDED "|"]
{% endif %}

{% if PARAMS %}
project set "Generics, Parameters" "{{ PARAMS }}" -process "Synthesize - XST"
{% endif %}

{{ POSTCFG }}

project close
{% endif %}

#--[ Design flow ]-------------------------------------------------------------

{% if SYN or PAR or BIT %}
project open {{ PROJECT }}.xise

{% if SYN %}
{{ PRESYN }}

# PRESYNTH
#project set top_level_module_type "EDIF"
project clean
process run "Synthesize"
if { [process get "Synthesize" status] == "errors" } { exit 1 }

{{ POSTSYN }}
{% endif %}

{% if PAR %}
{{ PREPAR }}

process run "Translate"
if { [process get "Translate" status] == "errors" } { exit 1 }
process run "Map"
if { [process get "Map" status] == "errors" } { exit 1 }
process run "Place & Route"
if { [process get "Place & Route" status] == "errors" } { exit 1 }

{{ POSTPAR }}
{% endif %}

{% if BIT %}
{{ PREBIT }}

process run "Generate Programming File"
if { [process get "Generate Programming File" status] == "errors" } { exit 1 }
# catch { file rename -force {{ TOP }}.bit {{ PROJECT }}.bit }
file rename -force {{ TOP }}.bit {{ PROJECT }}.bit

{{ POSTBIT }}
{% endif %}

project close
{% endif %}
