{#
#
# Copyright (C) 2015-2024 PyFPGA Project
#
# SPDX-License-Identifier: GPL-3.0-or-later
#
#}

{% if cfg %}# Project configuration -------------------------------------------------------

if { [ file exists {{ project }} ] } { file delete -force -- {{ project }} }
new_project -name {{ project }} -location {libero} -hdl {VERILOG} -family {SmartFusion2}
set_device -family {{ family }} -die {{ device }} -package {{ package }} -speed {{ speed }}

{{ precfg }}

{% if includes %}# Verilog Includes (Libero)
set_global_include_path_order -paths "{{ includes | join(' ') }}"
{% endif %}

{% if files %}# Files inclusion
{% for name, attr in files.items() %}
create_links -hdl_source {{ name }}{% if 'lib' in attr %} -library {{ attr.lib }}{% endif %}
{% endfor %}
{% endif %}

{% if constraints %}# Constraints inclusion
{% for name, attr in constraints.items() %}
create_links {% if name.endswith('.sdc') %}-sdc{% else %}-io_pdc{% endif %} {{ name }}
{% endfor %}
{% endif %}

build_design_hierarchy

{% if top %}# Top-level specification
set_root {{ top }}
{% endif %}

{% if constraints %}# Constraints configuration
{% set sdc_files = [] %}
{% set pdc_files = [] %}
{% for name, attr in constraints.items() %}
{% if name.endswith('.sdc') %}
{% set _ = sdc_files.append(name) %}
{% endif %}
{% set _ = pdc_files.append(name) %}
{% endfor %}
{% endif %}

{% if sdc_files %}organize_tool_files -tool {SYNTHESIZE}   -file {{ sdc_files | join(' -file ') }} -module {{ top }} -input_type {constraint}{% endif %}
{% if pdc_files %}organize_tool_files -tool {PLACEROUTE}   -file {{ pdc_files | join(' -file ') }} -module {{ top }} -input_type {constraint}{% endif %}
{% if sdc_files %}organize_tool_files -tool {VERIFYTIMING} -file {{ sdc_files | join(' -file ') }} -module {{ top }} -input_type {constraint}{% endif %}

{% if includes or defines or params %}# Synopsys configuration
configure_tool -name {SYNTHESIZE} -params {SYNPLIFY_OPTIONS:

{% if includes %}# Verilog Includes (Synopsys)
{% for include in includes %}
  set_option -include_path "{{ include }}"
{% endfor %}
{% endif %}

{% if defines %}# Verilog Defines (Synopsys)
{% for key, value in defines.items() %}
  set_option -hdl_define -set {{ key }}={{ value }}
{% endfor %}
{% endif %}

{% if params %}# Verilog Parameters / VHDL Generics (Synopsys)
{% for key, value in params.items() %}
  set_option -hdl_param -set {{ key }}={{ value }}
{% endfor %}
{% endif %}

}
{% endif %}

{{ postcfg }}

close_project

{% endif %}

{% if syn or par or bit %}# Design flow -----------------------------------------------------------------

open_project {{ project }}/{{ project }}.prjx

{% if syn %}# Synthesis

{{ presyn }}

run_tool -name {SYNTHESIZE}

{{ postsyn }}

{% endif %}

{% if par %}# Place and Route

{{ prepar }}

run_tool -name {PLACEROUTE}
run_tool -name {VERIFYTIMING}

{{ postpar }}

{% endif %}

{% if bit %}# Bitstream generation

{{ prebit }}

run_tool -name {GENERATEPROGRAMMINGFILE}

{{ postbit }}

{% endif %}

close_project

{% endif %}
