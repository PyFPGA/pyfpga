{#
#
# Copyright (C) 2020-2024 PyFPGA Project
#
# SPDX-License-Identifier: GPL-3.0-or-later
#
#}

set -e

DOCKER="docker run --user $(id -u):$(id -g) --rm -v $HOME:$HOME -w $PWD"

{% if syn %}# Synthesis
$DOCKER hdlc/ghdl:yosys /bin/bash -c "
{{ presyn }}
yosys -Q -m ghdl -p '

{% if includes %}
verilog_defaults -add{% for path in includes %} -I{{ path }}{% endfor %}
{% endif %}

{% if defines %}
verilog_defines{% for key, value in defines.items() %} -D{{ key }}={{ value }}{% endfor %}
{% endif %}

{% if files %}
{% for name, attr in files.items() %}
{% if attr.hdl == "vlog" %}
read_verilog -defer {{ name }}
{% elif attr.hdl == "slog" %}
read_verilog -defer -sv {{ name }}
{% endif %}
{% endfor %}
{% endif %}

{% if params %}
chparam{% for key, value in params.items() %} -set {{ key }} {{ value }}{% endfor %}
{% endif %}

synth -top {{ top }}
synth_{{ family }} -top {{ top }} -json {{ project }}.json
'
{{ postsyn }}
"
{% endif %}

{#
#SYNTH=
#WRITE=
#if [[ $BACKEND == "vivado" ]]; then
#    SYNTH="synth_xilinx -top $TOP -family $FAMILY"
#    WRITE="write_edif -pvector bra $PROJECT.edif"
#elif [[ $BACKEND == "ise" ]]; then
#    SYNTH="synth_xilinx -top $TOP -family $FAMILY -ise"
#    WRITE="write_edif -pvector bra $PROJECT.edif"
#elif [[ $BACKEND == "nextpnr" ]]; then
#    SYNTH="synth_$FAMILY -top $TOP -json $PROJECT.json"
#elif [[ $BACKEND == "verilog-nosynth" ]]; then
#    WRITE="write_verilog $PROJECT.v"
#else
#    SYNTH="synth -top $TOP"
#    WRITE="write_verilog $PROJECT.v"
#fi
#}

{% if par %}# Place and Route

CONSTRAINTS="{{ constraints | join(' ') }}"

{% if family == 'ice40' %}
if [ -n "$CONSTRAINTS" ]; then
  cat $CONSTRAINTS > constraints.pcf
  CONSTRAINT="--pcf constraints.pcf"
fi
$DOCKER hdlc/nextpnr:ice40 /bin/bash -c "
{{ prepar }}
nextpnr-ice40 --{{ device }} --package {{ package }} $CONSTRAINT --json {{ project }}.json --asc {{ project }}.asc
{{ postpar }}
"
$DOCKER hdlc/icestorm /bin/bash -c "
icetime -d {{ device }} -mtr {{ project }}.rpt {{ project }}.asc
"
{% endif %}

{% if family == 'ecp5' %}
if [ -n "$CONSTRAINTS" ]; then
  cat $CONSTRAINTS > constraints.lpf
  CONSTRAINT="--lpf constraints.lpf"
fi
$DOCKER hdlc/nextpnr:ecp5 /bin/bash -c "
{{ prepar }}
nextpnr-ecp5 --{{ device }} --package {{ package }} $CONSTRAINT --json {{ project }}.json --textcfg {{ project }}.config
{{ postpar }}
"
{% endif %}

{% endif %}

{% if bit %}# Bitstream generation

{% if family == 'ice40' %}
$DOCKER hdlc/icestorm /bin/bash -c "
{{ prebit }}
icepack {{ project }}.asc {{ project }}.bit
{{ postbit }}
"
{% endif %}

{% if family == 'ecp5' %}
$DOCKER hdlc/prjtrellis /bin/bash -c "
{{ prebit }}
ecppack --svf {{ project }}.svf {{ project }}.config {{ project }}.bit
{{ postbit }}
"
{% endif %}

{% endif %}
