#
# Copyright (C) 2015-2024 Rodrigo A. Melo
#
# SPDX-License-Identifier: GPL-3.0-or-later
#

set PROJECT  {{ PROJECT }}
set PART     {{ PART }}
set TOP      {{ TOP }}

# proc fpga_file {FILE {LIBRARY "work"}} {
#     set message "adding the file '$FILE'"
#     if { $LIBRARY != "work" } { append message " (into the VHDL library '$LIBRARY')" }
#     regexp -nocase {\.(\w*)$} $FILE -> ext
#     if { $ext == "tcl" } {
#         source $FILE
#         return
#     }
#     if { $LIBRARY != "work" } {
#         add_files $FILE
#         set_property library $LIBRARY [get_files $FILE]
#     } else {
#         add_files $FILE
#     }
# }

# proc fpga_include {PATH} {
#     lappend INCLUDED $PATH
#     # Verilog Included Files are NOT added
#     set_property "include_dirs" $INCLUDED [current_fileset]
# }

# proc fpga_params {} {
#     if { [llength $PARAMS] == 0 } { return }
#     set assigns [list]
#     foreach PARAM $PARAMS { lappend assigns [join $PARAM "="] }
#     set obj [get_filesets sources_1]
#     set_property "generic" "[join $assigns]" -objects $obj
# }

#--[ Project configuration ]---------------------------------------------------

{% if CFG %}
create_project -force $PROJECT
set_property source_mgmt_mode None [current_project]
set_property STEPS.SYNTH_DESIGN.ARGS.ASSERT true [get_runs synth_1]

set_property part $PART [current_project]

{{ PRECFG }}

{{ FILES }}

set_property top $TOP [current_fileset]

{% if DEFINES %}
set_property verilog_define { {{ DEFINES}} } [current_fileset]
{% endif %}

{% if INCLUDES %}
set_property include_dirs { {{ INCLUDES}} } [current_fileset]
{% endif %}

{% if PARAMS %}
set_property generic { {{ PARAMS }} } -objects [get_filesets sources_1]
{% endif %}

{% if ARCH %}
set_property top_arch {{ ARCH }} [current_fileset]
{% endif %}

{{ POSTCFG }}

close_project
{% endif %}

#--[ Design flow ]-------------------------------------------------------------

{% if SYN or PAR or BIT %}
open_project $PROJECT

{% if SYN %}
{{ PRESYN }}

# PRESYNTH
# set_property design_mode GateLvl [current_fileset]
reset_run synth_1
launch_runs synth_1
wait_on_run synth_1

{{ POSTSYN }}
{% endif %}

{% if PAR %}
{{ PREPAR }}

reset_run impl_1
launch_runs impl_1
wait_on_run impl_1

{{ POSTPAR }}
{% endif %}

{% if BIT %}
{{ PREBIT }}

open_run impl_1
write_bitstream -force $PROJECT
write_debug_probes -force -quiet $PROJECT.ltx

{{ POSTBIT }}
{% endif %}

close_project
{% endif %}
