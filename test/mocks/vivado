#!/usr/bin/env python3
#
# Copyright (C) 2022 Rodrigo A. Melo
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

import argparse
import subprocess


parser = argparse.ArgumentParser()

parser.add_argument('-mode', choices=['batch'], required=True)
parser.add_argument('-notrace', action='store_true', required=True)
parser.add_argument('-quiet', action='store_true', required=True)
parser.add_argument('-source', required=True)

args = parser.parse_args()

tool = parser.prog


#proc create_project    {{ args }} {{ }}
#proc open_project      {{ args }} {{ }}
#proc current_project   {{ args }} {{ }}
#proc current_fileset   {{ args }} {{ }}
#proc get_filesets      {{ args }} {{ }}
#proc set_property      {{ args }} {{ }}
#proc add_files         {{ args }} {{ }}
#proc get_files         {{ args }} {{ }}
#proc reset_run         {{ args }} {{ }}
#proc launch_runs       {{ args }} {{ }}
#proc get_runs          {{ args }} {{ }}
#proc wait_on_run       {{ args }} {{ }}
#proc open_run          {{ args }} {{ }}
#proc write_bitstream   {{ args }} {{ }}
#proc close_project     {{ args }} {{ }}
#proc current_bd_design {{ args }} {{ }}
#proc get_bd_cells      {{ args }} {{ }}


tcl = f'''
proc unknown {{ cmmd args }} {{ }}

source {args.source}
'''

with open(f'{tool}-mock.tcl', 'w', encoding='utf-8') as file:
    file.write(tcl)

subprocess.run(
   f'tclsh {tool}-mock.tcl',
   shell=True,
   check=True,
   universal_newlines=True,
   #stdout=output, stderr=subprocess.STDOUT
)

print(f'INFO:the {tool.upper()} mock has been executed')
