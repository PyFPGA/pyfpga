#!/usr/bin/env python3

#
# Copyright (C) 2024-2025 PyFPGA Project
#
# SPDX-License-Identifier: GPL-3.0-or-later
#

import argparse
import re
import subprocess


parser = argparse.ArgumentParser()

parser.add_argument('source')

args = parser.parse_args()

tool = parser.prog

tcl = f'''
proc unknown args {{ }}

source {args.source}
'''

with open(f'{tool}-mock.tcl', 'w', encoding='utf-8') as file:
    file.write(tcl)

subprocess.run(
   f'tclsh {tool}-mock.tcl',
   shell=True,
   check=True,
   universal_newlines=True
)

pattern = r'prj_project\s+new\s+-name\s+(\S+)\s'
with open(args.source, 'r', encoding='utf-8') as file:
    match = re.search(pattern, file.read())
    if match:
        project = match.group(1)
        open(f'{project}.bit', 'w', encoding='utf-8').close()

print(f'INFO:the {tool.upper()} mock has been executed')
